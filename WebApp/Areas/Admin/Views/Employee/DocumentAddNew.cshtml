@model DomainModels.Models.EmployeeDocumentModel

@{
    ViewBag.Title = "Add New Document";
}

<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<h3>Add @ViewBag.EmpFullName's New Document</h3>

<div>
    @Html.ActionLink("Back to Employees List", "Index") /
    @Html.ActionLink("Back to Document List", "DocumentList", new { id = Model.EmployeeId })    
</div>

@using (Html.BeginForm("DocumentAddNew", "Employee", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    Html.EnableClientValidation(true);

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeId)
        <div class="form-group">
            <label class="control-label col-md-2">Document Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Document Image</label>
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.file, new { type = "file" })
                @Html.ValidationMessageFor(model => model.file, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Upload" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Employees List", "Index") /
    @Html.ActionLink("Back to Document List", "DocumentList", new { id = Model.EmployeeId })    
</div>
